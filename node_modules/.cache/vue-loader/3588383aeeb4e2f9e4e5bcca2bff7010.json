{"remainingRequest":"D:\\品达通用权限系统\\资料\\前端工程\\集成goodsinfo\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\品达通用权限系统\\资料\\前端工程\\集成goodsinfo\\pinda-authority-ui\\src\\views\\pinda\\goods\\goodsinfo\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\品达通用权限系统\\资料\\前端工程\\集成goodsinfo\\pinda-authority-ui\\src\\views\\pinda\\goods\\goodsinfo\\Index.vue","mtime":1586850940059},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\集成goodsinfo\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\集成goodsinfo\\pinda-authority-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\集成goodsinfo\\pinda-authority-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\品达通用权限系统\\资料\\前端工程\\集成goodsinfo\\pinda-authority-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport Pagination from '@/components/Pagination'\nimport goodsInfoEdit from './Edit'\nimport goodsInfoApi from '@/api/GoodsInfo.js'\n\nexport default {\n  name: 'goodsInfoManage',\n  components: {Pagination, goodsInfoEdit, Treeselect},\n  data() {\n    return {\n      dialog: {\n        isVisible: false,\n        type: 'add'\n      },\n      tableKey: 0,\n      // total: 0,\n      orgList: [],\n      queryParams: {},\n      sort: {},\n      selection: [],\n      // 以下已修改\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      pagination: {\n        size: 10,\n        current: 1\n      }\n    }\n  },\n  computed: {},\n  mounted() {\n    this.fetch()\n  },\n  methods: {\n    loadListOptions({callback}) {\n      callback()\n    },\n    filterStatus(value, row) {\n      return row.status === value\n    },\n    editClose() {\n      this.dialog.isVisible = false\n    },\n    editSuccess() {\n      this.search()\n    },\n    onSelectChange(selection) {\n      this.selection = selection\n    },\n    search() {\n      this.fetch({\n        ...this.queryParams,\n        ...this.sort\n      })\n    },\n    reset() {\n      this.queryParams = {}\n      this.sort = {}\n      this.$refs.table.clearSort()\n      this.$refs.table.clearFilter()\n      this.search()\n    },\n    exportExcel() {\n      this.$message({\n        message: '待完善',\n        type: 'warning'\n      })\n    },\n    singleDelete(row) {\n      if (row.id == '2' || row.id == '3') {\n        this.$message({\n          message: '禁止删除',\n          type: 'warning'\n        })\n        return\n      }\n      this.$refs.table.toggleRowSelection(row, true)\n      this.batchDelete()\n    },\n    batchDelete() {\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        })\n        return\n      }\n      this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      })\n        .then(() => {\n          const ids = []\n          this.selection.forEach(u => {\n            ids.push(u.id)\n          })\n          this.delete(ids)\n        })\n        .catch(() => {\n          this.clearSelections()\n        })\n    },\n    clearSelections() {\n      this.$refs.table.clearSelection()\n    },\n    delete(ids) {\n      goodsInfoApi.delete({ids: ids}).then(response => {\n        const res = response.data\n        if (res.isSuccess) {\n          this.$message({\n            message: this.$t('tips.deleteSuccess'),\n            type: 'success'\n          })\n        }\n        this.search()\n      })\n    },\n    add() {\n      this.dialog.type = 'add'\n      this.dialog.isVisible = true\n      this.$refs.edit.setgoodsInfo(false, this.orgList)\n    },\n    edit(row) {\n      row.auditStatus = row.auditStatus ? 1 : 0\n      row.publishStatus = row.publishStatus ? 1 : 0\n      this.$refs.edit.setgoodsInfo(row, this.orgList)\n      this.dialog.type = 'edit'\n      this.dialog.isVisible = true\n    },\n    fetch(params = {}) {\n      this.loading = true\n      params.size = this.pagination.size\n      params.current = this.pagination.current\n      if (this.queryParams.timeRange) {\n        params.startCreateTime = this.queryParams.timeRange[0]\n        params.endCreateTime = this.queryParams.timeRange[1]\n      }\n      goodsInfoApi.page(params).then(response => {\n        const res = response.data\n        this.loading = false\n        if (res.isError) {\n          return\n        }\n        this.tableData = res.data\n      })\n    },\n    sortChange(val) {\n      this.sort.field = val.prop\n      this.sort.order = val.order\n      this.search()\n    }\n  }\n}\n",null]}