{"remainingRequest":"/root/pinda-authority-ui/node_modules/babel-loader/lib/index.js!/root/pinda-authority-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/root/pinda-authority-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/root/pinda-authority-ui/src/views/pinda/goods/goodsinfo/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/root/pinda-authority-ui/src/views/pinda/goods/goodsinfo/Index.vue","mtime":1663098575482},{"path":"/root/pinda-authority-ui/node_modules/cache-loader/dist/cjs.js","mtime":499205700000},{"path":"/root/pinda-authority-ui/node_modules/babel-loader/lib/index.js","mtime":499205700000},{"path":"/root/pinda-authority-ui/node_modules/cache-loader/dist/cjs.js","mtime":499205700000},{"path":"/root/pinda-authority-ui/node_modules/vue-loader/lib/index.js","mtime":499205700000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/root/pinda-authority-ui/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"/root/pinda-authority-ui/node_modules/@babel/runtime-corejs2/helpers/objectSpread2\"));\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\nvar _Pagination = _interopRequireDefault(require(\"@/components/Pagination\"));\n\nvar _Edit = _interopRequireDefault(require(\"./Edit\"));\n\nvar _GoodsInfo = _interopRequireDefault(require(\"@/api/GoodsInfo.js\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'goodsInfoManage',\n  components: {\n    Pagination: _Pagination.default,\n    goodsInfoEdit: _Edit.default,\n    Treeselect: _vueTreeselect.default\n  },\n  data: function data() {\n    return {\n      dialog: {\n        isVisible: false,\n        type: 'add'\n      },\n      tableKey: 0,\n      // total: 0,\n      orgList: [],\n      queryParams: {},\n      sort: {},\n      selection: [],\n      // 以下已修改\n      loading: false,\n      tableData: {\n        total: 0\n      },\n      pagination: {\n        size: 10,\n        current: 1\n      }\n    };\n  },\n  computed: {},\n  mounted: function mounted() {\n    this.fetch();\n  },\n  methods: {\n    loadListOptions: function loadListOptions(_ref) {\n      var callback = _ref.callback;\n      callback();\n    },\n    filterStatus: function filterStatus(value, row) {\n      return row.status === value;\n    },\n    editClose: function editClose() {\n      this.dialog.isVisible = false;\n    },\n    editSuccess: function editSuccess() {\n      this.search();\n    },\n    onSelectChange: function onSelectChange(selection) {\n      this.selection = selection;\n    },\n    search: function search() {\n      this.fetch((0, _objectSpread2.default)({}, this.queryParams, {}, this.sort));\n    },\n    reset: function reset() {\n      this.queryParams = {};\n      this.sort = {};\n      this.$refs.table.clearSort();\n      this.$refs.table.clearFilter();\n      this.search();\n    },\n    exportExcel: function exportExcel() {\n      this.$message({\n        message: '待完善',\n        type: 'warning'\n      });\n    },\n    singleDelete: function singleDelete(row) {\n      if (row.id == '2' || row.id == '3') {\n        this.$message({\n          message: '禁止删除',\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.$refs.table.toggleRowSelection(row, true);\n      this.batchDelete();\n    },\n    batchDelete: function batchDelete() {\n      var _this = this;\n\n      if (!this.selection.length) {\n        this.$message({\n          message: this.$t('tips.noDataSelected'),\n          type: 'warning'\n        });\n        return;\n      }\n\n      this.$confirm(this.$t('tips.confirmDelete'), this.$t('common.tips'), {\n        confirmButtonText: this.$t('common.confirm'),\n        cancelButtonText: this.$t('common.cancel'),\n        type: 'warning'\n      }).then(function () {\n        var ids = [];\n\n        _this.selection.forEach(function (u) {\n          ids.push(u.id);\n        });\n\n        _this.delete(ids);\n      }).catch(function () {\n        _this.clearSelections();\n      });\n    },\n    clearSelections: function clearSelections() {\n      this.$refs.table.clearSelection();\n    },\n    delete: function _delete(ids) {\n      var _this2 = this;\n\n      _GoodsInfo.default.delete({\n        ids: ids\n      }).then(function (response) {\n        var res = response.data;\n\n        if (res.isSuccess) {\n          _this2.$message({\n            message: _this2.$t('tips.deleteSuccess'),\n            type: 'success'\n          });\n        }\n\n        _this2.search();\n      });\n    },\n    add: function add() {\n      this.dialog.type = 'add';\n      this.dialog.isVisible = true;\n      this.$refs.edit.setgoodsInfo(false, this.orgList);\n    },\n    edit: function edit(row) {\n      row.auditStatus = row.auditStatus ? 1 : 0;\n      row.publishStatus = row.publishStatus ? 1 : 0;\n      this.$refs.edit.setgoodsInfo(row, this.orgList);\n      this.dialog.type = 'edit';\n      this.dialog.isVisible = true;\n    },\n    fetch: function fetch() {\n      var _this3 = this;\n\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.loading = true;\n      params.size = this.pagination.size;\n      params.current = this.pagination.current;\n\n      if (this.queryParams.timeRange) {\n        params.startCreateTime = this.queryParams.timeRange[0];\n        params.endCreateTime = this.queryParams.timeRange[1];\n      }\n\n      _GoodsInfo.default.page(params).then(function (response) {\n        var res = response.data;\n        _this3.loading = false;\n\n        if (res.isError) {\n          return;\n        }\n\n        _this3.tableData = res.data;\n      });\n    },\n    sortChange: function sortChange(val) {\n      this.sort.field = val.prop;\n      this.sort.order = val.order;\n      this.search();\n    }\n  }\n};\nexports.default = _default;",null]}